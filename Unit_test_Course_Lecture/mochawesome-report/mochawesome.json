{
  "stats": {
    "suites": 2,
    "tests": 5,
    "passes": 5,
    "pending": 0,
    "failures": 0,
    "start": "2023-09-25T16:52:24.068Z",
    "end": "2023-09-25T16:52:24.076Z",
    "duration": 8,
    "testsRegistered": 5,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "d7502683-f094-443f-8431-a2683a3ab806",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d0230a4e-7322-4a5c-ba6a-3132b340e4ff",
          "title": "getEvenNumbersFromArray",
          "fullFile": "/workspaces/CRE_Automated_Testing_Basics_in_JavaScript/Unit_test_Course_Lecture/test/numbers-validator/getEvenNumbersFromArray.spec.js",
          "file": "/test/numbers-validator/getEvenNumbersFromArray.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"getEvenNumbersFromArray\"",
              "fullTitle": "getEvenNumbersFromArray \"before each\" hook in \"getEvenNumbersFromArray\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "validator = new NumbersValidator();",
              "err": {},
              "uuid": "635454de-5080-43bc-a04d-212f1a9f4e90",
              "parentUUID": "d0230a4e-7322-4a5c-ba6a-3132b340e4ff",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"getEvenNumbersFromArray\"",
              "fullTitle": "getEvenNumbersFromArray \"after each\" hook in \"getEvenNumbersFromArray\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "validator = null;",
              "err": {},
              "uuid": "c3612542-396a-4cb6-a6ad-aefe60129fb7",
              "parentUUID": "d0230a4e-7322-4a5c-ba6a-3132b340e4ff",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should return an array of even numbers",
              "fullTitle": "getEvenNumbersFromArray should return an array of even numbers",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const arrayOfNumbers = [2, 6, 11, 22];\nconst evenNumbersArray = validator.getEvenNumbersFromArray(arrayOfNumbers);\nexpect(evenNumbersArray).to.be.eql([2, 6, 22]);",
              "err": {},
              "uuid": "aac41821-8a35-4501-b599-8c103ddb6de9",
              "parentUUID": "d0230a4e-7322-4a5c-ba6a-3132b340e4ff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should throw an error if array is not full of numbers",
              "fullTitle": "getEvenNumbersFromArray should throw an error if array is not full of numbers",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const arrayOfValues = [5, '2', 11, 22];\nexpect(() => {\n  validator.getEvenNumbersFromArray(arrayOfValues);\n}).to.throw('[5,2,11,22] is not an array of \"Numbers\"');",
              "err": {},
              "uuid": "b913c5d9-972b-469d-9f0b-c714ca386869",
              "parentUUID": "d0230a4e-7322-4a5c-ba6a-3132b340e4ff",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "aac41821-8a35-4501-b599-8c103ddb6de9",
            "b913c5d9-972b-469d-9f0b-c714ca386869"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "4a4b34c3-065c-4538-9d1f-b53a4137f612",
          "title": "isNumberEven positive test",
          "fullFile": "/workspaces/CRE_Automated_Testing_Basics_in_JavaScript/Unit_test_Course_Lecture/test/numbers-validator/isNumberEven.spec.js",
          "file": "/test/numbers-validator/isNumberEven.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"isNumberEven positive test\"",
              "fullTitle": "isNumberEven positive test \"before each\" hook in \"isNumberEven positive test\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "validator = new NumbersValidator();",
              "err": {},
              "uuid": "d7f0a6aa-a5a2-469d-8df4-55b371d61fb3",
              "parentUUID": "4a4b34c3-065c-4538-9d1f-b53a4137f612",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"isNumberEven positive test\"",
              "fullTitle": "isNumberEven positive test \"after each\" hook in \"isNumberEven positive test\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "validator = null;",
              "err": {},
              "uuid": "7239382c-873b-4646-a7bd-80d4c7d5d8b6",
              "parentUUID": "4a4b34c3-065c-4538-9d1f-b53a4137f612",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should return true when provided with an even number",
              "fullTitle": "isNumberEven positive test should return true when provided with an even number",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const vaidationResults = validator.isNumberEven(4);\nexpect(vaidationResults).to.be.equal(true);",
              "err": {},
              "uuid": "ea1d2d2d-00cf-4c77-b178-db5feaf1d593",
              "parentUUID": "4a4b34c3-065c-4538-9d1f-b53a4137f612",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return false when provided with an even number",
              "fullTitle": "isNumberEven positive test should return false when provided with an even number",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const vaidationResults = validator.isNumberEven(5);\nexpect(vaidationResults).to.be.equal(false);",
              "err": {},
              "uuid": "cab0ab0c-fbc2-4eb3-b66c-b0106e47ecac",
              "parentUUID": "4a4b34c3-065c-4538-9d1f-b53a4137f612",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "shourld throw error when provided a string",
              "fullTitle": "isNumberEven positive test shourld throw error when provided a string",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(() =>{\n  validator.isNumberEven('4');\n}).to.throw('[4] is not of type \"Number it is of type \"string\"');",
              "err": {},
              "uuid": "eaa111a6-a239-43c1-8102-bd7c74105f59",
              "parentUUID": "4a4b34c3-065c-4538-9d1f-b53a4137f612",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ea1d2d2d-00cf-4c77-b178-db5feaf1d593",
            "cab0ab0c-fbc2-4eb3-b66c-b0106e47ecac",
            "eaa111a6-a239-43c1-8102-bd7c74105f59"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}